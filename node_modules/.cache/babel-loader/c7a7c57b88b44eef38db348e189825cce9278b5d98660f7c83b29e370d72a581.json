{"ast":null,"code":"function checkRoot(string) {\n  let arr = string.split(', ');\n  let newArr = arr.map(elem => {\n    return Number(elem);\n  });\n  if (newArr.includes(NaN)) {\n    return 'incorrect input';\n  } else {\n    let totalArr = newArr.reduce((total, elem) => {\n      return total * elem;\n    }, 1);\n    let square = totalArr + 1;\n    let root = Math.sqrt(square);\n    return `${square}, ${root}`;\n  }\n}","map":{"version":3,"names":["checkRoot","string","arr","split","newArr","map","elem","Number","includes","NaN","totalArr","reduce","total","square","root","Math","sqrt"],"sources":["/Users/sasha/lololoshka10/tomato/src/App.tsx"],"sourcesContent":["function checkRoot(string) {\n  let arr = string.split(', ')\n  let newArr = arr.map((elem) => {\n      return Number(elem)\n  })\n  \n  if (newArr.includes(NaN)) {\n      return 'incorrect input'\n  }\n  \n  else {\n  let totalArr = newArr.reduce((total, elem) => \n       {\n       return total * elem\n      \n       }, 1)\n  \n  let square = totalArr+1;\n  let root = Math.sqrt(square)\n  return `${square}, ${root}`\n       }\n  }\n\n"],"mappings":"AAAA,SAASA,SAASA,CAACC,MAAM,EAAE;EACzB,IAAIC,GAAG,GAAGD,MAAM,CAACE,KAAK,CAAC,IAAI,CAAC;EAC5B,IAAIC,MAAM,GAAGF,GAAG,CAACG,GAAG,CAAEC,IAAI,IAAK;IAC3B,OAAOC,MAAM,CAACD,IAAI,CAAC;EACvB,CAAC,CAAC;EAEF,IAAIF,MAAM,CAACI,QAAQ,CAACC,GAAG,CAAC,EAAE;IACtB,OAAO,iBAAiB;EAC5B,CAAC,MAEI;IACL,IAAIC,QAAQ,GAAGN,MAAM,CAACO,MAAM,CAAC,CAACC,KAAK,EAAEN,IAAI,KACpC;MACA,OAAOM,KAAK,GAAGN,IAAI;IAEnB,CAAC,EAAE,CAAC,CAAC;IAEV,IAAIO,MAAM,GAAGH,QAAQ,GAAC,CAAC;IACvB,IAAII,IAAI,GAAGC,IAAI,CAACC,IAAI,CAACH,MAAM,CAAC;IAC5B,OAAQ,GAAEA,MAAO,KAAIC,IAAK,EAAC;EACtB;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}